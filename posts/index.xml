<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>http://example.org/posts/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 27 Aug 2022 13:34:49 +0800</lastBuildDate><atom:link href="http://example.org/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>mac OS 安装 homebrew 失败解决方案</title>
      <link>http://example.org/posts/macos-homebrew%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sat, 27 Aug 2022 13:34:49 +0800</pubDate>
      
      <guid>http://example.org/posts/macos-homebrew%E5%AE%89%E8%A3%85/</guid>
      <description>mac OS 安装 homebrew 失败解决方案 1.查看homebrew官网的安装教程，复制安装命令。
2.打开mac OS终端Terminal，输入安装命令，输入密码，回车确认安装。
/bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;#34; 3.然后你可能会得到一个错误：
fatal: unable to access &amp;#39;https://github.com/Homebrew/brew/&amp;#39;: LibreSSL SSL_read: error:02FFF03C:system library:func(4095):Operation timed out, errno 60 Failed during: git fetch --force origin 也可能是这个错误：
error: RPC failed; curl 28 LibreSSL SSL_read: error:02FFF03C:system library:func(4095):Operation timed out, errno 60 fatal: expected flush after ref listing Error: Fetching /opt/homebrew/Library/Taps/homebrew/homebrew-core failed! Failed during: /opt/homebrew/bin/brew update --force --quiet 4.出现这个错误是因为墙的原因，解决方案是使用镜像，好用的有清华镜像和阿里云镜像，在这里我使用清华的镜像。
5.首先修改homebrew相关的环境变量：
输入命令：
export HOMEBREW_BREW_GIT_REMOTE=&amp;#34;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&amp;#34; export HOMEBREW_CORE_GIT_REMOTE=&amp;#34;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git&amp;#34; export HOMEBREW_BOTTLE_DOMAIN=&amp;#34;https://mirrors.</description>
    </item>
    
    <item>
      <title>My First Post1</title>
      <link>http://example.org/posts/my-first-post1/</link>
      <pubDate>Sat, 27 Aug 2022 13:34:49 +0800</pubDate>
      
      <guid>http://example.org/posts/my-first-post1/</guid>
      <description>lalal
hhhh
ddd Eee </description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/posts/github-page%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/github-page%E6%90%AD%E5%BB%BA/</guid>
      <description>搭建静态页面网站有几种技术选型：Hogo是Go语言，Hexo是nodejs，jekyll是Ruby
jekyll 的优势是方便，Github 本身有内核支持深度绑定，项目中直接添加配置文件开始写文本就行。windows不推荐安装ruby环境，并且不支持部分私密不可见。
hexo 的优势是速度快，中文社区，缺点是每次更新内容都需要执行严格的语法检查，然后再次部署。
Hugo 简介响应快，简单，社区活跃
Gitee Pages 是一个免费的静态网页托管服务，您可以使用 Gitee Pages 托管博客、项目官网等静态网页。如果您使用过 Github Pages 那么您会很快上手使用 Gitee 的 Pages服务。目前 Gitee Pages 支持 Jekyll、Hugo、Hexo编译静态资源。
Jekyll、Hugo、Hexo 编译判断依据
编译 Hugo 依据：仓库编译目录下存在config.toml|json|yaml文件和content目录的时候，会使用hugo生成静态文件。 编译 Hexo 依据：仓库编译目录下存在package.json，_config.yml文件和scaffolds目录的，会使用hexo generate生成静态文件，由于每次部署编译需要重新克隆编译并进行npm install，所以使用 Hexo 的时间相对 Hugo 和 Jekyll 会长一些。 当不符合上述1和2条件的时候，就默认使用Jekyll编译。 jekyll 主题：https://github.com/topics/jekyll-theme
Hugo 社区：https://discourse.gohugo.io/
主题：https://themes.gohugo.io/themes/hugo-theme-learn/
安装：https://gohugo.io/getting-started/installing/
安装 </description>
    </item>
    
  </channel>
</rss>
